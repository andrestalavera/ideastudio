@page "/"
@page "/andres-talavera-resume"
@using IdeaStudio.Website.Models
@using IdeaStudio.Website.Services
@using IdeaStudio.Website.Shared
@using Markdig
@using System.Text.Json
@inject IAnimationService AnimationService
@inject IJSRuntime JSRuntime
@inject ILazyLoadingService LazyLoadingService
@inject ISeoService SeoService

<HeroComponent PersonalInformation="@resume?.PersonalInformation" ProfileImage="images/andres-talavera.jpeg" />
<div class="pagebreak"></div>
<section id="about" class="py-5 d-print-none" data-bs-spy="scroll" data-bs-target="#navbar">
	<div class="container">
		@if (resume?.AboutSections is not null)
		{
			<div class="row g-4">
				@foreach (var (section, index) in resume.AboutSections.Select((s, i) => (s, i)))
				{
					<div class="col-12 col-lg-6 col-xxl-4">
						<CardComponent Title="@(section.Title)" Index="@index">
							<Content>
								@if (section.Paragraphs is not null)
								{
									@foreach (string paragraph in section.Paragraphs)
									{
										<p class="text-primary">@((MarkupString)Markdown.ToHtml(paragraph))</p>
									}
								}
								@if (section.Icons is not null)
								{
									<div class="d-flex d-print-none justify-content-center gap-3 my-3">
										@foreach (string icon in section.Icons)
										{
											<i class="@icon fa-4x" aria-hidden="true"></i>
										}
									</div>
								}
								@if (section.Images is not null)
								{
									<div class="d-flex d-print-none justify-content-center gap-3 my-3">
										@foreach (string image in section.Images)
										{
											<img src="images/@image" alt="@image" class="p-1" width="70" height="70" loading="lazy">
										}
									</div>
								}
							</Content>
						</CardComponent>
					</div>
				}
			</div>
		}
		else
		{
			<PlaceholderComponent />
		}
	</div>
</section>

<section id="experiences" class="py-5 pagebreak" data-bs-spy="scroll" data-bs-target="#navbar">
	<div class="container">
		<SectionComponent Title="Professional experiences" />

		@if (resume?.Experiences is not null)
		{
			<div class="row g-4">
				@foreach (var (experience, index) in resume.Experiences.Select((e, i) => (e, i)))
				{
					<div class="col-12 @DisplayClasses(index, DEFAULT_EXPERIENCES_TO_SHOW)">
						<ExperienceComponent Experience="@experience" />
					</div>
				}
			</div>

			@if (HasHiddenExperiences)
			{
				<div class="row d-print-none">
					<div class="col-12 text-center mt-4">
						<button class="btn btn-light" @onclick="ToggleExperiences">
							@if (showAllExperiences)
							{
								<span>Show only 3 latest experiences</span>
							}
							else
							{
								<span>Show @HiddenExperiencesCount more experiences</span>
							}
						</button>
					</div>
				</div>
			}
		}
		else
		{
			<PlaceholderComponent />
		}
	</div>
</section>

<section id="trainings" class="py-5 d-print-none" data-bs-spy="scroll" data-bs-target="#navbar">
	<div class="container">
		<SectionComponent Title="I have conducted training courses for..." />

		@if (resume?.TrainingCenters is not null)
		{
			<div class="row g-4">
				@foreach (var (center, index) in resume.TrainingCenters.Select((t, i) => (t, i)))
				{
					<div class="col-12 col-lg-6 col-xxl-4">
						<CardComponent Title="@center.Name" Index="@index">
							<Content>
								@if (center.Courses is not null)
								{
									<div class="vstack">
									<p>Courses</p>
									@foreach (string course in center.Courses)
									{
										<div class="d-flex align-items-center text-primary">
											<i class="fas fa-graduation-cap me-2 small"></i>@course
										</div>
									}
									</div>
								}
								@if (center.Locations is not null)
								{
									<div class="mt-2">
									<p>Locations</p>
										@foreach (string location in center.Locations)
										{
											<span class="badge text-bg-light mt-2 me-2">
												<i class="fas fa-map-marker-alt me-2 small"></i>@location
											</span>
										}
									</div>
								}
							</Content>
						</CardComponent>
					</div>
				}
			</div>
		}
		else
		{
			<PlaceholderComponent />
		}
	</div>
</section>

<section id="contact" class="py-5 d-print-none" data-bs-spy="scroll" data-bs-target="#navbar">
	<ContactComponent />
</section>

@code {
	private Resume? resume;
	private bool showAllExperiences = false;
	private const int DEFAULT_EXPERIENCES_TO_SHOW = 3;

	private int HiddenExperiencesCount => Math.Max(0, (resume?.Experiences?.Count() ?? 0) - DEFAULT_EXPERIENCES_TO_SHOW);
	private bool HasHiddenExperiences => HiddenExperiencesCount > 0;

	protected override async Task OnInitializedAsync()
	{
		await AnimationService.InitializeAnimationsAsync();
		await LoadResumeAsync();
	}

	private async Task LoadResumeAsync()
	{
		string languageCode = "en";
		resume = await LazyLoadingService.LoadDataAsync<Resume>($"data/resume-{languageCode}.json");
		StateHasChanged();
	}

	private void ToggleExperiences()
	{
		showAllExperiences = !showAllExperiences;
		StateHasChanged();
	}

	private string DisplayClasses(int index, int toShow)
	{
		string baseClasses = "d-print-flex";

		if (index < toShow)
		{
			return $"{baseClasses} d-flex";
		}

		return showAllExperiences
		? $"{baseClasses} d-flex"
		: $"{baseClasses} d-none";
	}
}
