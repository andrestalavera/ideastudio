@using IdeaStudio.Website.Services
@inject ICultureService CultureService
@inject ILocalizationService LocalizationService
@implements IDisposable

<div class="dropdown">
	<button class="btn btn-light btn-sm bg-acrylic rounded-pill dropdown-toggle" type="button" id="cultureDropdown"
		data-bs-toggle="dropdown" aria-expanded="false" aria-label="@_changeLanguageText">
		<i class="fas fa-globe me-1" aria-hidden="true"></i>
		<span class="d-none d-xl-inline">@GetCurrentCultureDisplayName()</span>
	</button>
	<ul class="dropdown-menu" aria-labelledby="cultureDropdown">
		@foreach (var culture in CultureService.SupportedCultures)
		{
			<li>
				<a class="dropdown-item @(IsCurrentCulture(culture) ? "active" : "")"
					@onclick="() => ChangeCultureAsync(culture.Name)">
					@GetCultureDisplayName(culture)
				</a>
			</li>
		}
	</ul>
</div>

@code {
	private string _changeLanguageText = "Change Language";
	private string _englishText = "English";
	private string _frenchText = "FranÃ§ais";

	protected override async Task OnInitializedAsync()
	{
		CultureService.CultureChanged += OnCultureChanged;
		await LoadLocalizedStringsAsync();
	}

	private async Task LoadLocalizedStringsAsync()
	{
		await LocalizationService.LoadCultureAsync(CultureService.CurrentCulture.Name);
		_changeLanguageText = LocalizationService.GetString("ChangeLanguage");
		_englishText = LocalizationService.GetString("English");
		_frenchText = LocalizationService.GetString("French");
		StateHasChanged();
	}

	private async void OnCultureChanged()
	{
		await LoadLocalizedStringsAsync();
	}

	private async Task ChangeCultureAsync(string culture)
	{
		await CultureService.SetCultureAsync(culture);
		StateHasChanged();
	}

	private bool IsCurrentCulture(System.Globalization.CultureInfo culture)
	=> CultureService.CurrentCulture.Name.Equals(culture.Name, StringComparison.OrdinalIgnoreCase);

	private string GetCurrentCultureDisplayName()
	=> CultureService.CurrentCulture.Name.ToLower() switch
	{
		"fr" => _frenchText,
		_ => _englishText
	};

	private string GetCultureDisplayName(System.Globalization.CultureInfo culture)
	=> culture.Name.ToLower() switch
	{
		"fr" => _frenchText,
		_ => _englishText
	};

	public void Dispose() => CultureService.CultureChanged -= OnCultureChanged;

}
