@inherits LayoutComponentBase
@using IdeaStudio.Website.Services
@using IdeaStudio.Website.Components
@using IdeaStudio.Website.Shared
@inject ICultureService CultureService
@inject ILocalizationService LocalizationService
@* @inject NavigationManager Navigation *@
@implements IDisposable

<CascadingValue Value="this">
	<LoadingComponent />

	<div id="main-content-container" class="d-flex flex-column min-vh-100">
		<a href="#main-content"
			class="skip-link visually-hidden-focusable position-absolute top-0 start-0 z-3 btn btn-primary">
			@_skipToMainContentText
		</a>

		<nav class="navbar navbar-expand-lg navbar-dark bg-primary bg-acrylic bg-opacity-25 sticky-top border-0 border-bottom border-opacity-25 d-print-none"
			data-bs-spy="scroll" data-bs-target="#navbar-nav" data-bs-offset="70" style="z-index: 4 !important;">
			<div class="container">
				<a class="navbar-brand fw-bold d-flex align-items-center" href="/" aria-label="IdeaStudio - Home">
					<img src="images/logo-ideastudio-white.svg" alt="IdeaStudio"
						class="d-inline-block align-text-top me-2" height="40" width="100" loading="eager">
				</a>

				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar-nav"
					aria-controls="navbar-nav" aria-expanded="false" aria-label="@_toggleNavigationText">
					<span class="navbar-toggler-icon"></span>
				</button>

				<div class="collapse navbar-collapse" id="navbar-nav">
					<div class="me-auto">
						@if (NavbarContent is not null)
						{
							@NavbarContent
						}
					</div>

					<div class="d-flex gap-2">
						<SocialNetworksComponent Size="sm" />
						<CultureSelector />
					</div>
				</div>
			</div>
		</nav>

		<main id="main-content" class="flex-grow-1 text-primary z-3" role="main">
			@Body
		</main>

		<FooterSection />
	</div>
</CascadingValue>

@code {
	[Parameter] public RenderFragment? NavbarContent { get; set; }

	private string _skipToMainContentText = "Skip to main content";
	private string _toggleNavigationText = "Toggle navigation";

	protected override async Task OnInitializedAsync()
	{
		CultureService.CultureChanged += OnCultureChanged;
		await LoadLocalizedStringsAsync();
	}

	public void SetNavbarContent(RenderFragment? content)
	{
		NavbarContent = content;
		StateHasChanged();
	}

	private async Task LoadLocalizedStringsAsync()
	{
		await LocalizationService.LoadCultureAsync(CultureService.CurrentCulture.Name);
		LoadTexts();
		StateHasChanged();
	}

	private async void OnCultureChanged()
	=> await LoadLocalizedStringsAsync();

	private void LoadTexts()
	{
		_skipToMainContentText = LocalizationService.GetString("SkipToMainContent");
		_toggleNavigationText = LocalizationService.GetString("ToggleNavigation");
	}

	public void Dispose()
	{
		CultureService.CultureChanged -= OnCultureChanged;
		GC.SuppressFinalize(this);
	}
}
